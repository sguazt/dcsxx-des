#!/bin/bash

##
## Shell script for creating configuration include files.
##
## Authors:
##  Marco Guazzone (marco.guazzone@gmail.com)
##

. ./scripts/dcs_functions.sh

dtnow=$(date +'%F %T (%Z)')
logfile="$(basename $0).log"
base_dir=$1
prj_subdir=dcs/des

CC=${CC:=cc}
CXX=${CXX:=c++}

## Declares user-related variables
USR_CPPFLAGS=
USR_CFLAGS=
USR_CXXFLAGS=
USR_LDFLAGS=

## Script starts here

dcs_log_init $logfile
dcs_log_info $logfile "Starting configuration maker..."

base_inc_dir=


## Sanity checks
if [ -z "$base_dir" ]; then
    base_dir=.
fi
if [ -z "$base_inc_dir" ]; then
    base_inc_dir=$base_dir/inc
fi


## Load user-related variables
if [ -e "$base_dir/user-config.sh" ]; then
    source "$base_dir/user-config.sh"
fi


## Control variables
# Boost
want_boost="yes"
have_boost=
have_boost_bool='false'
dcs_log_info $logfile "Want Boost: $want_boost"

## Set C/C++ environments
if [ ! -z "$USR_CPPFLAGS" ]; then
    CPPFLAGS="$CFLAGS $USR_CPPFLAGS"
fi
if [ ! -z "$USR_CFLAGS" ]; then
    CFLAGS="$CFLAGS $USR_CFLAGS"
fi
if [ ! -z "$USR_CXXFLAGS" ]; then
    CXXFLAGS="$CXXFLAGS $USR_CXXFLAGS"
fi
if [ ! -z "$USR_LDFLAGS" ]; then
    LDFLAGS="$LDFLAGS $USR_LDFLAGS"
fi

## Check for Boost
if [ "$want_boost" = "yes" ]; then
	old_cxxflags=$CXXFLAGS
	old_ldflags=$LDFLAGS
	CXXFLAGS+=$USR_CXXFLAGS
	LDFLAGS+=$USR_LDFLAGS
	have_boost=$(dcs_check_boost)
	dcs_log_info $logfile "Checking for Boost... $have_boost"
	if [ "$have_boost" = "yes" ]; then
		have_boost_bool='true'
	else
		have_boost_bool='false'
	fi
	CXXFLAGS=$old_cxxflags
	LDFLAGS=$old_ldflags
else
	have_boost_bool='false'
fi

## Get version
version=$(cat $base_dir/VERSION)


## Auto-generation of files.

if [ "$found_errors" = "yes" ]; then
    dcs_log_info $logfile "Configuration maker has finished."
    dcs_log_error $logfile "Exit with errors!"

    echo "There are some errors. Check the $logfile log-file."
    exit 1
fi

# Create base config dirs
#mkdir -p "$base_inc_dir/config"
mkdir -p $base_inc_dir/$prj_subdir/detail
mkdir -p $base_inc_dir/$prj_subdir/detail/config

cat > $base_dir/config.mk <<EOT
## \file config.mk
##
## \brief Configurations for the Make build system.
##
## [$dtnow]
## This is an autogenerated file. Do not edit.
##
## \author Marco Guazzone (marco.guazzone@gmail.com)
##

CPPFLAGS_release+=$USR_CPPFLAGS
CFLAGS_release+=$USR_CFLAGS
CXXFLAGS_release+=$USR_CXXFLAGS
LDFLAGS_release+=$USR_LDFLAGS
CPPFLAGS_debug+=$USR_CPPFLAGS
CFLAGS_debug+=$USR_CFLAGS
CXXFLAGS_debug+=$USR_CXXFLAGS
LDFLAGS_debug+=$USR_LDFLAGS
CPPFLAGS_test+=$USR_CPPFLAGS
CFLAGS_test+=$USR_CFLAGS
CXXFLAGS_test+=$USR_CXXFLAGS
LDFLAGS_test+=$USR_LDFLAGS
CPPFLAGS_xmp+=$USR_CPPFLAGS
CFLAGS_xmp+=$USR_CFLAGS
CXXFLAGS_xmp+=$USR_CXXFLAGS
LDFLAGS_xmp+=$USR_LDFLAGS
EOT

cat > $base_inc_dir/$prj_subdir/detail/config.hpp <<EOT
/** \file $prj_subdir/detail/config.hpp
 *
 * \brief Configuration for this library.
 *
 * [$dtnow]
 * This is an autogenerated file. Do not edit.
 *
 * \author Marco Guazzone (marco.guazzone@gmail.com)
 */

#ifndef DCS_DES_DETAIL_CONFIG_HPP
#define DCS_DES_DETAIL_CONFIG_HPP


#include <$prj_subdir/detail/config/boost.hpp>


#define DCS_DES_DETAIL_CONFIG_HAVE_BOOST $have_boost_bool


#endif // DCS_DES_DETAIL_CONFIG_HPP
EOT

cat > $base_inc_dir/$prj_subdir/detail/version.hpp <<EOT
/** \file $prj_subdir/detail/version.hpp
 *
 * \brief Version of this library.
 *
 * [$dtnow]
 * This is an autogenerated file. Do not edit.
 *
 * \author Marco Guazzone (marco.guazzone@gmail.com)
 */

#ifndef DCS_DES_DETAIL_VERSION_HPP
#define DCS_DES_DETAIL_VERSION_HPP


#define DCS_DES_DETAIL_VERSION $version
#define DCS_DES_DETAIL_MAJOR_VERSION (DCS_DETAIL_VERSION / 100000)
#define DCS_DES_DETAIL_MINOR_VERSION (DCS_DETAIL_VERSION / 100 % 1000)
#define DCS_DES_DETAIL_PATCH_VERSION (DCS_DETAIL_VERSION % 100)


#endif // DCS_DES_DETAIL_VERSION_HPP
EOT

cat > $base_inc_dir/$prj_subdir/detail/config/boost.hpp <<EOT
/**
 * \file $prj_subdir/detail/config/boost.hpp
 *
 * \brief Configurations for Boost libraries.
 *
 * [$dtnow]
 * This is an autogenerated file. Do not edit.
 *
 * \author Marco Guazzone (marco.guazzone@gmail.com)
 */

#ifndef DCS_DES_DETAIL_CONFIG_BOOST_HPP
#define DCS_DES_DETAIL_CONFIG_BOOST_HPP


//#include <$prj_subdir/macro.hpp>


/// Inform if we have Boost
#if $have_boost_bool
# ifndef DCS_DES_DETAIL_CONFIG_HAVE_BOOST
#  define DCS_DES_DETAIL_CONFIG_HAVE_BOOST
# endif // DCS_DES_DETAIL_CONFIG_HAVE_BOOST
#else
# undef DCS_DES_DETAIL_CONFIG_HAVE_BOOST
#endif // $have_boost_bool

/// Get the Boost version macros
#ifdef DCS_DES_DETAIL_CONFIG_HAVE_BOOST
# include <boost/version.hpp>
# define DCS_DES_DETAIL_CONFIG_BOOST_VERSION BOOST_VERSION
# define DCS_DES_DETAIL_CONFIG_BOOST_MAJOR_VERSION (BOOST_VERSION / 100000)
# define DCS_DES_DETAIL_CONFIG_BOOST_MINOR_VERSION (BOOST_VERSION / 100 % 1000)
# define DCS_DES_DETAIL_CONFIG_BOOST_PATCH_VERSION (BOOST_VERSION % 100)
#endif // DCS_DES_DETAIL_CONFIG_HAVE_BOOST

#define DCS_DES_DETAIL_CONFIG_BOOST_CHECK_VERSION(v) \\
	(defined(DCS_DES_DETAIL_CONFIG_HAVE_BOOST) && (DCS_DES_DETAIL_CONFIG_BOOST_VERSION >= (v)))

// This is a macro for macro generation... actually it seem not possible :(
//#define DCS_DES_DETAIL_CONFIG_BOOST_NEED_VERSION(v)
//	DCS_MACRO_HASHIFY(if) DCS_DES_DETAIL_CONFIG_BOOST_CHECK_VERSION(v)
//		DCS_MACRO_HASHIFY(error) "Required Boost library version >= " #v
//	DCS_MACRO_HASHIFY(endif)

#endif // DCS_DES_DETAIL_CONFIG_BOOST_HPP
EOT

dcs_log_info $logfile "Configuration maker has finished."
